var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var CouchbaseLiteOriginal = /** @class */ (function (_super) {
    __extends(CouchbaseLiteOriginal, _super);
    function CouchbaseLiteOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CouchbaseLiteOriginal.prototype.getURL = function () { return cordova(this, "getURL", { "callbackStyle": "node" }, arguments); };
    CouchbaseLiteOriginal.pluginName = "CouchbaseLite";
    CouchbaseLiteOriginal.plugin = "couchbase-lite-phonegap-plugin";
    CouchbaseLiteOriginal.pluginRef = "cblite";
    CouchbaseLiteOriginal.repo = "https://github.com/couchbaselabs/Couchbase-Lite-PhoneGap-Plugin";
    CouchbaseLiteOriginal.platforms = ["Android", "iOS"];
    return CouchbaseLiteOriginal;
}(IonicNativePlugin));
var CouchbaseLite = new CouchbaseLiteOriginal();
export { CouchbaseLite };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2NvdWNoYmFzZS1saXRlL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDQSxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQXdIckMsaUNBQWlCOzs7O0lBUWxELDhCQUFNOzs7Ozs7d0JBaklSO0VBeUhtQyxpQkFBaUI7U0FBdkMsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIENvdWNoYmFzZSBMaXRlXG4gKiBAZGVzY3JpcHRpb25cbiAqIFBsdWdpbiB0byBpbnN0YWxsIENvdWNoYmFzZSBMaXRlIGluIHlvdXIgUGhvbmVHYXAgYXBwIG9uIGlPUyBvciBBbmRyb2lkIDxkb2NzLWNhcmQgaHJlZj1cImh0dHBzOi8vaW9uaWNmcmFtZXdvcmsuY29tL2ludGVncmF0aW9ucy9jb3VjaGJhc2UtbGl0ZVwiIGlvbmljb249XCJhbGVydFwiPlRoaXMgUGx1Z2luIGlzIG5vIGxvbmdlciBzdXBwb3J0ZWQgYnkgQ291Y2hiYXNlLiBQbGVhc2Ugc2VlIG91ciBDb3VjaGJhc2UgTGl0ZSBJbnRlZ3JhdGlvbjwvZG9jcy1jYXJkPlxuICpcbiAqIEB1c2FnZVxuICogYGBgdHlwZXNjcmlwdFxuICogaW1wb3J0IHsgQ291Y2hiYXNlTGl0ZSB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvY291Y2hiYXNlLWxpdGUvbmd4JztcbiAqIGltcG9ydCB7IEh0dHAgfSBmcm9tICdAYW5ndWxhci9odHRwJztcbiAqIGltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJ1xuICogY29uc3RydWN0b3IocHJpdmF0ZSBjb3VjaGJhc2U6IENvdWNoYmFzZUxpdGUsIHByaXZhdGUgcGxhdGZvcm06UGxhdGZvcm0scHJpdmF0ZSBfaHR0cDpIdHRwKSB7XG4gKiAgICB0aGlzLmluaXRNZXRob2QoKTtcbiAqIH1cbiAqIHVybDpzdHJpbmc7XG4gKiBpbml0TWV0aG9kKCkge1xuICogICAgdGhpcy5jb3VjaGJhc2UuZ2V0VVJMKCkudGhlbigodXJsKT0+IHtcbiAqICAgICAgICB0aGlzLnVybCA9IHVybDtcbiAqICAgIH0pXG4gKiB9XG4gKiBnZXRVcmwoKSB7XG4gKiAgICAgIHJldHVybiB0aGlzLnVybDtcbiAqIH1cbiAqIC8vIERBVEFCQVNFUyAvL1xuICogY3JlYXRlRGF0YWJhc2UoZGF0YWJhc2VfbmFtZTpzdHJpbmcpIHtcbiAqICAgICAgbGV0IHVybCA9IHRoaXMuZ2V0VXJsKCk7XG4gKiAgICAgIHVybCA9IHVybCtkYXRhYmFzZV9uYW1lO1xuICogICAgICByZXR1cm4gdGhpcy5faHR0cFxuICogICAgICAgIC5wdXQodXJsKVxuICogICAgICAgIC5tYXAoZGF0YSA9PiB7IHRoaXMucmVzdWx0cyA9IGRhdGFbJ3Jlc3VsdHMnXSB9KVxuICogICAgICAgIC5jYXRjaCgoZXJyb3I6YW55KSA9PiB7XG4gKiAgICAgICAgICAgcmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyb3IuanNvbigpIHx8ICdDb3VjaGJhc2UgTGl0ZSBlcnJvcicpO1xuICogICAgICAgICB9KVxuICogIH1cbiAqIGRlbGV0ZURhdGFiYXNlKGRhdGFiYXNlX25hbWU6c3RyaW5nKSB7XG4gKiAgICAgIGxldCB1cmwgPSB0aGlzLmdldFVybCgpO1xuICogICAgICB1cmwgPSB1cmwrZGF0YWJhc2VfbmFtZTtcbiAqICAgICAgcmV0dXJuIHRoaXMuX2h0dHBcbiAqICAgICAgICAuZGVsZXRlKHVybClcbiAqICAgICAgICAubWFwKGRhdGEgPT4geyB0aGlzLnJlc3VsdHMgPSBkYXRhWydyZXN1bHRzJ10gfSlcbiAqICAgICAgICAuY2F0Y2goKGVycm9yOmFueSkgPT4ge1xuICogICAgICAgICAgIHJldHVybiBPYnNlcnZhYmxlLnRocm93KGVycm9yLmpzb24oKSB8fCAnQ291Y2hiYXNlIExpdGUgZXJyb3InKTtcbiAqICAgICAgICB9KVxuICogfVxuICogZ2V0QWxsRGJzKCkge1xuICogICAgICBsZXQgdXJsID0gdGhpcy5nZXRVcmwoKTtcbiAqICAgICAgdXJsID0gdXJsKydfYWxsX2Ricyc7XG4gKiAgICAgIHJldHVybiB0aGlzLl9odHRwXG4gKiAgICAgICAgLmdldCh1cmwpXG4gKiAgICAgICAgLm1hcChkYXRhID0+IHsgdGhpcy5yZXN1bHRzID0gZGF0YVsncmVzdWx0cyddIH0pXG4gKiAgICAgICAgLmNhdGNoKChlcnJvcjphbnkpID0+IHtcbiAqICAgICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS50aHJvdyhlcnJvci5qc29uKCkgfHwgJ0NvdWNoYmFzZSBMaXRlIGVycm9yJyk7XG4gKiAgICAgICAgfSlcbiAqIH1cbiAqIC8vIERPQ1VNRU5UUyAvL1xuICogZ2V0QWxsRG9jdW1lbnRzKGRhdGFiYXNlX25hbWU6c3RyaW5nKXtcbiAqICAgICAgbGV0IHVybCA9IHRoaXMuZ2V0VXJsKCk7XG4gKiAgICAgIC8vIGluY2x1ZGVfZG9jcz10cnVlIHdpbGwgaW5jbHVkZSBhIGRvYyBpbnNpZGUgcmVzcG9uc2UsIGl0IGlzIGZhbHNlIGJ5IGRlZmF1bHRcbiAqICAgICAgdXJsID0gdXJsICsgZGF0YWJhc2VfbmFtZSArICcvX2FsbF9kb2NzP2luY2x1ZGVfZG9jcz10cnVlJztcbiAqICAgICAgcmV0dXJuIHRoaXMuX2h0dHBcbiAqICAgICAgICAuZ2V0KHVybClcbiAqICAgICAgICAubWFwKGRhdGEgPT4geyB0aGlzLnJlc3VsdHMgPSBkYXRhWydyZXN1bHRzJ10gfSlcbiAqICAgICAgICAuY2F0Y2goKGVycm9yOmFueSkgPT4ge1xuICogICAgICAgICAgIHJldHVybiBPYnNlcnZhYmxlLnRocm93KGVycm9yLmpzb24oKSB8fCAnQ291Y2hiYXNlIExpdGUgZXJyb3InKTtcbiAqICAgICAgICB9KSAgICAgICAgLlxuICogfVxuICogY3JlYXRlRG9jdW1lbnQoZGF0YWJhc2VfbmFtZTpzdHJpbmcsZG9jdW1lbnQpe1xuICogICAgICBsZXQgdXJsID0gdGhpcy5nZXRVcmwoKTtcbiAqICAgICAgdXJsID0gdXJsICsgZGF0YWJhc2VfbmFtZTtcbiAqICAgICAgcmV0dXJuIHRoaXMuX2h0dHBcbiAqICAgICAgICAucG9zdCh1cmwsZG9jdW1lbnQpXG4gKiAgICAgICAgLm1hcChkYXRhID0+IHsgdGhpcy5yZXN1bHRzID0gZGF0YVsncmVzdWx0cyddIH0pXG4gKiAgICAgICAgLmNhdGNoKChlcnJvcjphbnkpID0+IHtcbiAqICAgICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS50aHJvdyhlcnJvci5qc29uKCkgfHwgJ0NvdWNoYmFzZSBMaXRlIGVycm9yJyk7XG4gKiAgICAgICAgfSkgICAgICAgIC5cbiAqIH1cbiAqIGxldCBkb2N1bWVudCA9IHtcbiAqICAgIF9pZDonWW91IGNhbiBlaXRoZXIgc3BlY2lmeSB0aGUgZG9jdW1lbnQgSUQgKG11c3QgYmUgc3RyaW5nKSBlbHNlIGNvdWNoYmFzZSBnZW5lcmF0ZXMgb25lIGZvciB5b3VyIGRvYycsXG4gKiAgICBkYXRhOntuYW1lOidzYW5kbWFuJyxhZ2U6MjUsY2l0eTpwdW5lfVxuICogIH1cbiAqIGNyZWF0ZURvY3VtZW50KCdqdXN0YmUnLCBkb2N1bWVudCk7XG4gKiAvLyBzdWNjZXNzZnVsIHJlc3BvbnNlXG4gKiB7IFwiaWRcIjogXCJzdHJpbmdcIixcInJldlwiOiBcInN0cmluZ1wiLFwib2tcIjogdHJ1ZSB9XG4gKiB1cGRhdGVEb2N1bWVudChkYXRhYmFzZV9uYW1lOnN0cmluZyxkb2N1bWVudCl7XG4gKiAgICAgIGxldCB1cmwgPSB0aGlzLmdldFVybCgpO1xuICogICAgICB1cmwgPSB1cmwgKyBkYXRhYmFzZV9uYW1lICsgJy8nICsgZG9jdW1lbnQuX2lkO1xuICogICAgICByZXR1cm4gdGhpcy5faHR0cFxuICogICAgICAgIC5wdXQodXJsLGRvY3VtZW50KVxuICogICAgICAgIC5tYXAoZGF0YSA9PiB7IHRoaXMucmVzdWx0cyA9IGRhdGFbJ3Jlc3VsdHMnXSB9KVxuICogICAgICAgIC5jYXRjaCgoZXJyb3I6YW55KSA9PiB7XG4gKiAgICAgICAgICAgcmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyb3IuanNvbigpIHx8ICdDb3VjaGJhc2UgTGl0ZSBlcnJvcicpO1xuICogICAgICAgIH0pICAgICAgICAuXG4gKiB9XG4gKiAvLyBmb3IgdXBkYXRpb24gb2YgZG9jdW1lbnQgeW91ciBkb2N1bWVudCBtdXN0IGNvbnRhaW4gbW9zdCByZWNlbnQgcmV2KHJldmlzaW9uKSBpZC5cbiAqIC8vIGZvciBlYWNoIHVwZGF0aW9uIG9mIGRvY3VtZW50IG5ldyByZXYgaWQgaXMgZ2V0IGdlbmVyYXRlZFxuICogLy8gc3VjY2Vzc2Z1bCByZXNwb25zZVxuICogeyBcImlkXCI6IFwic3RyaW5nXCIsXCJyZXZcIjogXCJzdHJpbmcobmV3IHJldmlzaW9uIGlkKVwiLFwib2tcIjogdHJ1ZSB9XG4gKiBkZWxldGVEb2N1bWVudChkYXRhYmFzZV9uYW1lOnN0cmluZyxkb2N1bWVudCl7XG4gKiAgICAgIGxldCB1cmwgPSB0aGlzLmdldFVybCgpO1xuICogICAgICB1cmwgPSB1cmwgKyBkYXRhYmFzZV9uYW1lICsgJy8nICsgZG9jdW1lbnQuX2lkICsnP3Jldj0nK2RvYy5fcmV2O1xuICogICAgICByZXR1cm4gdGhpcy5faHR0cFxuICogICAgICAgIC5kZWxldGUodXJsKVxuICogICAgICAgIC5tYXAoZGF0YSA9PiB7IHRoaXMucmVzdWx0cyA9IGRhdGFbJ3Jlc3VsdHMnXSB9KVxuICogICAgICAgIC5jYXRjaCgoZXJyb3I6YW55KSA9PiB7XG4gKiAgICAgICAgICAgcmV0dXJuIE9ic2VydmFibGUudGhyb3coZXJyb3IuanNvbigpIHx8ICdDb3VjaGJhc2UgTGl0ZSBlcnJvcicpO1xuICogICAgICAgIH0pICAgICAgICAuXG4gKiB9XG4gKlxuICpcbiAqIGBgYFxuICovXG5AUGx1Z2luKHtcbiAgcGx1Z2luTmFtZTogJ0NvdWNoYmFzZUxpdGUnLFxuICBwbHVnaW46ICdjb3VjaGJhc2UtbGl0ZS1waG9uZWdhcC1wbHVnaW4nLFxuICBwbHVnaW5SZWY6ICdjYmxpdGUnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2NvdWNoYmFzZWxhYnMvQ291Y2hiYXNlLUxpdGUtUGhvbmVHYXAtUGx1Z2luJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ11cbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQ291Y2hiYXNlTGl0ZSBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIEdldCB0aGUgZGF0YWJhc2UgdXJsXG4gICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBsb2NhbCBkYXRhYmFzZSB1cmxcbiAgICovXG4gIEBDb3Jkb3ZhKHtcbiAgICBjYWxsYmFja1N0eWxlOiAnbm9kZSdcbiAgfSlcbiAgZ2V0VVJMKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG59XG4iXX0=